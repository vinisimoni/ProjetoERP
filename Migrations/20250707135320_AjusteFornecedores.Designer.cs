// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCadastro.Data;

#nullable disable

namespace ProjetoERP.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250707135320_AjusteFornecedores")]
    partial class AjusteFornecedores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoCadastro.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Situacao");

                    b.Property<bool>("UtilizarMesmoEnderecoParaEntrega")
                        .HasColumnType("BIT")
                        .HasColumnName("UtilizarMesmoEnderecoParaEntrega");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Contas", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AVista")
                        .HasColumnType("bit");

                    b.Property<bool>("AtualizarVencimentos")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("DiasRecebimento")
                        .HasColumnType("int");

                    b.Property<int>("IdConta")
                        .HasColumnType("int");

                    b.Property<int>("MaxParcelas")
                        .HasColumnType("int");

                    b.Property<bool>("PermiteCompra")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitePagamento")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteRecebimento")
                        .HasColumnType("bit");

                    b.Property<bool>("PermiteVenda")
                        .HasColumnType("bit");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("TaxaAdministradora")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdConta");

                    b.ToTable("FormasPagamento", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.FormaPagamentoParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("NrParcela")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFormaPagamento");

                    b.ToTable("FormasPagamentoParcelas", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Situacao");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.HistoricoValorVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DataLancamento");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("INT")
                        .HasColumnName("IdMaterial");

                    b.Property<decimal>("ValorAnterior")
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("ValorAnterior");

                    b.Property<decimal>("ValorNovo")
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("ValorNovo");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterial");

                    b.ToTable("HistoricoValorVenda", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ControlaEstoque")
                        .HasColumnType("BIT")
                        .HasColumnName("ControlaEstoque");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<decimal>("EstoqueAtual")
                        .HasColumnType("DECIMAL(15,5)")
                        .HasColumnName("EstoqueAtual");

                    b.Property<string>("Referencia")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Referencia");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Situacao");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Unidade");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("DECIMAL(15,2)")
                        .HasColumnName("ValorVenda");

                    b.HasKey("Id");

                    b.ToTable("Materiais", (string)null);
                });

            modelBuilder.Entity("ProjetoERP.Domain.MovimentacaoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DataMovimentacao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<decimal>("EstoqueAnterior")
                        .HasColumnType("DECIMAL(15,5)")
                        .HasColumnName("EstoqueAnterior");

                    b.Property<decimal>("EstoqueNovo")
                        .HasColumnType("DECIMAL(15,5)")
                        .HasColumnName("EstoqueNovo");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("INT")
                        .HasColumnName("IdMaterial");

                    b.Property<int?>("IdOrigemMovimentacao")
                        .HasColumnType("INT")
                        .HasColumnName("IdOrigemMovimentacao");

                    b.Property<int>("OrigemMovimentacao")
                        .HasColumnType("INT")
                        .HasColumnName("OrigemMovimentacao");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("DECIMAL(15,5)")
                        .HasColumnName("Quantidade");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TipoMovimentacao");

                    b.HasKey("Id");

                    b.HasIndex("IdMaterial");

                    b.ToTable("MovimentacaoEstoque", (string)null);
                });

            modelBuilder.Entity("ProjetoCadastro.Domain.Cliente", b =>
                {
                    b.OwnsOne("ProjetoERP.Domain.ValueObject.DadosCadastrais", "Dados", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("CpfCnpj")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CpfCnpj");

                            b1.Property<string>("NomeFantasia")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("NomeFantasia");

                            b1.Property<string>("RazaoSocial")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("RazaoSocial");

                            b1.Property<int>("TipoPessoa")
                                .HasColumnType("INT")
                                .HasColumnName("TipoPessoa");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ProjetoERP.Domain.ValueObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Bairro");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cep");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Estado");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Endereco");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ProjetoERP.Domain.ValueObject.Endereco", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("BairroEntrega");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CepEntrega");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CidadeEntrega");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("EstadoEntrega");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("EnderecoEntrega");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Dados")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("EnderecoEntrega")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoERP.Domain.FormaPagamento", b =>
                {
                    b.HasOne("ProjetoERP.Domain.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("IdConta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("ProjetoERP.Domain.FormaPagamentoParcela", b =>
                {
                    b.HasOne("ProjetoERP.Domain.FormaPagamento", "FormaPagamento")
                        .WithMany("Parcelas")
                        .HasForeignKey("IdFormaPagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("ProjetoERP.Domain.Fornecedor", b =>
                {
                    b.OwnsOne("ProjetoERP.Domain.ValueObject.DadosCadastrais", "Dados", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .HasColumnType("int");

                            b1.Property<string>("CpfCnpj")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CpfCnpj");

                            b1.Property<string>("NomeFantasia")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("NomeFantasia");

                            b1.Property<string>("RazaoSocial")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("RazaoSocial");

                            b1.Property<int>("TipoPessoa")
                                .HasColumnType("INT")
                                .HasColumnName("TipoPessoa");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.OwnsOne("ProjetoERP.Domain.ValueObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("FornecedorId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Bairro");

                            b1.Property<string>("Cep")
                                .HasMaxLength(8)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cep");

                            b1.Property<string>("Cidade")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Estado")
                                .HasMaxLength(2)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Estado");

                            b1.Property<string>("Rua")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Endereco");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.Navigation("Dados")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoERP.Domain.HistoricoValorVenda", b =>
                {
                    b.HasOne("ProjetoERP.Domain.Material", "Materiais")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("ProjetoERP.Domain.MovimentacaoEstoque", b =>
                {
                    b.HasOne("ProjetoERP.Domain.Material", "Materiais")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("ProjetoERP.Domain.FormaPagamento", b =>
                {
                    b.Navigation("Parcelas");
                });
#pragma warning restore 612, 618
        }
    }
}
