// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoCadastro.Data;

#nullable disable

namespace ProjetoERP.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250529133401_CampoSituacaoNoCliente")]
    partial class CampoSituacaoNoCliente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoCadastro.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Situacao");

                    b.Property<bool>("UtilizarMesmoEnderecoParaEntrega")
                        .HasColumnType("BIT")
                        .HasColumnName("UtilizarMesmoEnderecoParaEntrega");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("ProjetoCadastro.Domain.Cliente", b =>
                {
                    b.OwnsOne("ProjetoCadastro.Domain.ValueObject.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Bairro");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cep");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Estado");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Endereco");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ProjetoCadastro.Domain.ValueObject.Endereco", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("BairroEntrega");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CepEntrega");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CidadeEntrega");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("EstadoEntrega");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("EnderecoEntrega");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.OwnsOne("ProjetoCadastro.Domain.ValueObject.DadosCadastrais", "Dados", b1 =>
                        {
                            b1.Property<int>("ClienteId")
                                .HasColumnType("int");

                            b1.Property<string>("CpfCnpj")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("CpfCnpj");

                            b1.Property<string>("NomeFantasia")
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("NomeFantasia");

                            b1.Property<string>("RazaoSocial")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("RazaoSocial");

                            b1.Property<int>("TipoPessoa")
                                .HasColumnType("INT")
                                .HasColumnName("TipoPessoa");

                            b1.HasKey("ClienteId");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Dados")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("EnderecoEntrega")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
